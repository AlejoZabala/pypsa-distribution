# SPDX-FileCopyrightText: : 2021 The PyPSA-Earth Authors
#
# SPDX-License-Identifier: CC0-1.0


version: 0.0.1
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

scenario:
  simpl: ['']
  ll: ['copt']
  clusters: [55]
  opts: [Co2L-3H] #Co2L adds an overall absolute carbon-dioxide emissions limi
                  #3H resamples the time-resolution by averaging over every 3 snapshots

countries: ["SL"]
# Can be replaced by country ["NG", "BJ"] or user specific region, more at https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

year: "2019" #Year setting allows the choice of which data to download (es. Worldpop_data)

snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: "left" # end is not inclusive


# definition of the Coordinate Reference Systems
crs:
  geo_crs: EPSG:4326  # general geographic projection, not used for metric measures. "EPSG:4326" is the standard used by OSM and google maps
  distance_crs: EPSG:3857  # projection for distance measurements only. Possible recommended values are "EPSG:3857" (used by OSM and Google Maps)
  area_crs: ESRI:54009  # projection for area measurements only. Possible recommended values are Global Mollweide "ESRI:54009"


electricity:
  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind]
    StorageUnit: ["lithium", "lead acid"]
  conventional_carriers: [diesel]

  renewable_carriers: [solar, onwind]


# TODO: Needs to be adjusted for Africa
costs:
  year: 2030
  discountrate: 0.07 # From a Lion Hirth paper, also reflects average of Noothout et al 2016
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  marginal_cost: # EUR/MWh
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.


# options for build_shapes
build_shape_options:
  gadm_layer_id: 1  # GADM level area used for the gadm_shapes. Codes are country-dependent but roughly: 0: country, 1: region/county-like, 2: municipality-like
  update_file: false  # When true, all the input files are downloaded again and replace the existing files
  out_logging: true  # When true, logging is printed to console
  year: 2020  # reference year used to derive shapes, info on population and info on GDP
  nprocesses: 2  # number of processes to be used in build_shapes
  nchunks: 2  # number of data chuncks for build_shapes. If not specified or smaller than nprocesses, specified as nprocesses
  worldpop_method: "standard"  # "standard" pulls from web 1kmx1km raster, "api" pulls from API 100mx100m raster, false (not "false") no pop addition to shape which is useful when generating only cutout
  gdp_method: "standard"  # "standard" pulls from web 1x1km raster, false (not "false") no gdp addition to shape which useful when generating only cutout
  contended_flag: "set_by_country" # "set_by_country" assigns the contended areas to the countries according to the GADM database, "drop" drops these contended areas from the model


solving:
  options:
    formulation: kirchhoff
    load_shedding: true
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: true
    track_iterations: false
    #nhours: 10
  solver:
    name: glpk

tech_modelling:
  general_vre: ["onwind", "solar"]
  storage_techs: ["lithium", "lead acid"]
  conv_techs: ["diesel"]
  load_carriers: ["AC load"]


load:
  scaling_factor: 15000


microgrids_list:
  microgridA:
    lon_min: -11.6807
    lon_max: -11.3320
    lat_min: 7.8697
    lat_max: 7.9905

  microgridB:
    lon_min: -9.6807
    lon_max: -9.3320
    lat_min: 8.8697
    lat_max: 8.9905

  microgridC:
    lon_min: -9.1235
    lon_max: -8.3320
    lat_min: 8.800
    lat_max: 9.9905
