# SPDX-FileCopyrightText: : 2021 The PyPSA-Earth Authors
#
# SPDX-License-Identifier: CC0-1.0


version: 0.0.1
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

scenario:
  simpl: ['']
  ll: ['copt']
  clusters: [55]
  opts: [Co2L-3H] #Co2L adds an overall absolute carbon-dioxide emissions limi
                  #3H resamples the time-resolution by averaging over every 3 snapshots

countries: ["SL"]
# Can be replaced by country ["NG", "BJ"] or user specific region, more at https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: "left" # end is not inclusive


# definition of the Coordinate Reference Systems
crs:
  geo_crs: EPSG:4326  # general geographic projection, not used for metric measures. "EPSG:4326" is the standard used by OSM and google maps
  distance_crs: EPSG:3857  # projection for distance measurements only. Possible recommended values are "EPSG:3857" (used by OSM and Google Maps)
  area_crs: ESRI:54009  # projection for area measurements only. Possible recommended values are Global Mollweide "ESRI:54009"


electricity:
  voltages: [220., 300., 380.]
  co2limit: 1.487e+9
  co2base: 1.487e+9
  agg_p_nom_limits: data/agg_p_nom_minmax.csv
  hvdc_as_lines: false  # should HVDC lines be modeled as `Line` or as `Link` component?

  operational_reserve: # like https://genxproject.github.io/GenX/dev/core/#Reserves
    activate: false
    epsilon_load: 0.02 # share of total load
    epsilon_vres: 0.02 # share of total renewable supply
    contingency: 0 # fixed capacity in MW

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind]
    StorageUnit: ["lithium", "lead acid"]  
  
  conventional_carriers: [diesel]

  renewable_carriers: [solar, onwind]


# TODO: Needs to be adjusted for Africa
costs:
  year: 2030
  discountrate: 0.07 # From a Lion Hirth paper, also reflects average of Noothout et al 2016
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  marginal_cost: # EUR/MWh
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.


monte_carlo:
  options:
    add_to_snakefile: true
    samples: 7    # number of optimizations
    sampling_strategy: "chaospy"    # "pydoe2", "chaospy", "scipy", packages that are supported
  pypsa_standard:
      # User can add here flexibly more features for the Monte-Carlo sampling.
      # Given as "key: value" format
      # Key: add below the pypsa object for the monte_carlo sampling, "network" is only allowed for filtering!
      # Value: currently supported format [l_bound, u_bound] or empty [], represent multiplication factors for the object
    loads_t.p_set: [0.9, 1.1]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "wind"]: [0.9, 1.1]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "solar"]: [0.9, 1.1]

solving:
  options:
    formulation: kirchhoff
    load_shedding: true
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: true
    track_iterations: false
    #nhours: 10
  solver:
    name: gurobi

tech_modelling:
  general_vre: ["onwind", "solar"]
  storage_techs: ["lithium", "lead acid"]
  conv_techs: ["diesel"]  
  load_carriers: ["AC load"]

microgrids_list:
  micA: #random place in Sierra Leone
    name: ["nicename"]
  Location:
    Centre: 
      lon: -11.6807
      lat: 7.8697
    Sides:
      Deltalon: 0.3282
      Deltalat: 0.1973

  
scaling_factor: 15000